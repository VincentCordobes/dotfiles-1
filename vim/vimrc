call plug#begin()

" LSC
Plug 'natebosch/vim-lsc' ", {'branch': 'response_hooks'}

" Fuzzy finder
Plug 'junegunn/fzf', {'dir': '~/.fzf', 'do': './install --bin'}
Plug 'junegunn/fzf.vim'

" Utilities
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'mattn/emmet-vim'
Plug 'shougo/neocomplete.vim'
Plug 'ervandew/supertab'
Plug 'blindfs/vim-taskwarrior'
Plug 'soywod/vim-phonetics'

" Theme and syntax
Plug 'rakr/vim-one'
Plug 'pangloss/vim-javascript'
Plug 'leafgarland/typescript-vim'
Plug 'maxmellon/vim-jsx-pretty'
Plug 'moll/vim-node'

call plug#end()

" Functions ------------------------------------------------------------------------------

function! ToggleQfList()
  if (filter(getwininfo(), 'v:val.quickfix') == [])
    :copen
  else
    :cclose
  endif
endfunction

function! ToggleLocList()
  if (getloclist('.') != [])
    if (filter(getwininfo(), 'v:val.loclist') == [])
      :lopen
    else
      :lclose
    endif
  endif
endfunction

function! InsertEnter()
  :highlight StatusLine guibg=#4078f2
endfunction

function! BufWritePost()
  :highlight StatusLine guibg=#444444
endfunction

function! UpdateStatusLine()
  if &modified
    highlight StatusLine guibg=#a626a4
  else
    highlight StatusLine guibg=#444444
  endif
endfunction

function! PrintCounters()
  let l:qflen = len(getqflist())
  let l:loclen = len(getloclist('%'))

  return ' | qf:' . l:qflen . ' | loc:' . l:loclen . ' '
endfunction

" Global settings ------------------------------------------------------------------------

set background=light
set backspace=indent,eol,start
set breakindent
set clipboard=unnamedplus
set completeopt-=preview
set expandtab
set foldcolumn=2
set foldlevelstart=99
set foldmethod=syntax
set foldtext=FoldText()
set hidden
set history=1000
set laststatus=2
set linebreak
set nobackup
set noshowmode
set noswapfile
set ruler
set scrolloff=3
set shiftwidth=2
set smartcase
set softtabstop=2
set splitright
set statusline=\ \:%l\ (%P)%=%y\ %f
set statusline+=%{PrintCounters()}
set tabstop=2
set termguicolors
set ttimeoutlen=50

colorscheme one

hi clear FoldColumn
hi clear SignColumn
hi StatusLineNC cterm=NONE guifg=#494b53 guibg=#f0f0f0
hi StatusLine guifg=#ffffff guibg=#444444
hi FoldColumn guifg=#d3d3d3
hi Folded guibg=#fafafa guifg=#d3d3d3

" LSC ------------------------------------------------------------------------------------

let g:lsc_auto_map = v:true
let g:lsc_preview_split_direction = 'below'
let g:lsc_server_commands = {
  \ 'javascript': 'node_modules/.bin/javascript-typescript-stdio',
  \ 'javascript.jsx': 'node_modules/.bin/javascript-typescript-stdio',
  \ 'typescript': 'node_modules/.bin/javascript-typescript-stdio',
  \ 'typescript.tsx': 'node_modules/.bin/javascript-typescript-stdio'
  \ }

" let g:lsc_server_commands = {
"   \ 'javascript': {
"   \   'command': 'node_modules/.bin/javascript-typescript-stdio',
"   \   'response_hooks': lsc#filterReferenceCalls({'exclude': ['node_modules/']})
"   \   }
"   \ }

" Completion -----------------------------------------------------------------------------

let g:neocomplete#enable_at_startup = 1

" JavaScript -----------------------------------------------------------------------------

let g:jsx_ext_required = 0

" SuperTab -------------------------------------------------------------------------------

let g:SuperTabDefaultCompletionType = '<C-n>'

" Emmet ----------------------------------------------------------------------------------

let g:user_emmet_install_global = 1
let g:user_emmet_leader_key = ','

" Auto commands --------------------------------------------------------------------------

let mapleader = ' '

autocmd FileType qf wincmd J
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o
autocmd InsertEnter * call InsertEnter()
autocmd BufWritePost * call BufWritePost()
autocmd BufEnter,TextChanged,InsertLeave * call UpdateStatusLine()

" Mapping --------------------------------------------------------------------------------

nnoremap <silent> <leader>n :Explore<CR>

nnoremap <leader>g :Ag 
nnoremap <silent> <leader>f :GFiles<CR>
nnoremap <silent> <leader>b :Buffers<CR>
nnoremap <silent> <leader>h :History<CR>

nnoremap <silent> <leader>c :call ToggleQfList()<CR>
nnoremap <silent> <leader>l :call ToggleLocList()<CR>
nnoremap <silent> <leader>p :PhoneticsPlay<CR>

