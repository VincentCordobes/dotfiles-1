# ------------------------------------------------------------------ # General #

snippet try "try...catch"
try {
	$0
} catch (err) {
	$1
}
endsnippet

snippet c "const"
const $0 = $1
endsnippet

snippet cc "const {}"
const {$0} = $1
endsnippet

snippet f "function"
function ${1:name}(${2:params}) {
	${0:${VISUAL}}
}
endsnippet

snippet ef "export function"
export function ${1:name}(${2:params}) {
	${0:${VISUAL}}
}
endsnippet

snippet edf "export default function"
export default function ${1:name}(${2:params}) {
	${0:${VISUAL}}
}
endsnippet

snippet af "async function"
async function ${1:name}(${2:params}) {
	${0:${VISUAL}}
}
endsnippet

snippet eaf "export async function"
export async function ${1:name}(${2:params}) {
	${0:${VISUAL}}
}
endsnippet

snippet ff "() =>"
${1:name} = ${2:params} => {
	${0:${VISUAL}}
}
endsnippet

snippet aff "async () =>"
${1:name} = async ${2:params} => {
	${0:${VISUAL}}
}
endsnippet

# ------------------------------------------------------------------ # Logging #

snippet log "console.log"
console.log(${0})
endsnippet

# -------------------------------------------------------------------- # React #

snippet fc "React.FC"
import React from 'react'

function $1(props) {
	return (
		<>
			$0
		</>
	)
}

export default $1
endsnippet

snippet i "import"
import $0 from '$1'
endsnippet

snippet il "import lodash/fp/..."
import $1 from 'lodash/fp/$1'
endsnippet

snippet ue "useEffect"
useEffect(() => {
	$0
}, [$1])
endsnippet

snippet ur "useRef"
const $1 = useRef$2(${3:null})
$0
endsnippet

snippet us "useState"
const [$1, set${1/.+/\u$0/}] = useState$2(${3:null})
$0
endsnippet

snippet cn "className={classes.X}"
className={classes.$0}
endsnippet

snippet { "Pair of {}"
{
	$0
}
endsnippet
